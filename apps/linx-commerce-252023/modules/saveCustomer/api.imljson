[
    {
        "response": {
            "temp": {
                "Method": "{{if( ifempty(parameters.CustomerID, 0 ) == 0; 'POST'; 'PUT')}}"
            }
        }
    },
    {
        "condition": "{{if( ifempty(parameters.CustomerID, 0 ) == 0; false; true)}}",
        "url": "/v1/Profile/API.svc/web/SearchCustomer",
        "body": {
            "Page": {
                "PageIndex": 0,
                "PageSize": 1
            },
            "Where": "{{'CustomerID == ' + parameters.CustomerID}}",
            "OrderBy": "CreatedDate,CustomerID"
        },
        "response": {
            "temp": {
                "IntegrationID": "{{body.Result[1].IntegrationID}}",
                "CustomerTypeID": "{{ switch(body.Result[1].CustomerType; 'P'; 80; 'C'; 67; 71 ) }}",
                "CustomerType": "{{ body.Result[1].CustomerType }}"
            }
        }
    },
    {
        "condition": "{{if( ifempty(parameters.CustomerID; 0 ) == 0; true; false)}}",
        "response": {
            "temp": {
                "CustomerTypeID": "{{switch(parameters.CustomerType;'P';80;'C';67;parameters.CustomerType)}}",
                "CustomerType": "{{switch(parameters.CustomerType;80;'P';67;'C';parameters.CustomerType)}}"
            }
        }
    },
    {
        // Person (80)
        "condition": "{{temp.Method == 'PUT' && (temp.CustomerTypeID == 80)}}",
        "url": "/v1/Profile/API.svc/web/GetPerson",
        "body": "{{parameters.CustomerID}}",
        "response": {
            "temp": {
                "Customer": "{{body}}"
            }
        }
    },
    {
        // Company (67)
        "condition": "{{temp.Method == 'PUT' && (temp.CustomerTypeID == 67)}}",
        "url": "/v1/Profile/API.svc/web/GetCompany",
        "body": "{{parameters.CustomerID}}",
        "response": {
            "temp": {
                "Customer": "{{body}}"
            }
        }
    },
    {
        // Customer
        "response": {
            "temp": {
                "Body": {
                    // Customer
                    "CustomerID": "{{       if(temp.Method == 'POST'; 0 ;                               temp.Customer.CustomerID                                                        )}}",
                    "IntegrationID": "{{    if(temp.Method == 'POST'; parameters.IntegrationID ;        if(ifempty(parameters.IntegrationID, '') == ''     ; temp.IntegrationID ; parameters.IntegrationID) )}}",
                    "CustomerType": "{{     if(temp.Method == 'POST'; temp.CustomerTypeID ;             temp.CustomerTypeID  )}}",
                    "CustomerStatusID": "{{ if(temp.Method == 'POST'; parameters.CustomerStatusID ;     if(ifempty(parameters.CustomerStatusID, '') == ''  ; temp.Customer.CustomerStatusID; parameters.CustomerStatusID ) )}}",
                    "Email": "{{            if(temp.Method == 'POST'; parameters.Email ;                if(ifempty(parameters.Email, '') == ''             ; temp.Customer.Email; parameters.Email ) )}}",
                    "Name": "{{             if(temp.Method == 'POST'; parameters.Name ;                 if(ifempty(parameters.Name, '') == ''              ; temp.Customer.Name; parameters.Name ) )}}",
                    "WebSiteID": "{{        if(temp.Method == 'POST'; parameters.WebSiteID ;            if(ifempty(parameters.WebSiteID, '') == ''         ; temp.Customer.WebSiteID; parameters.WebSiteID ) )}}",
                    "Password": "{{         if(temp.Method == 'POST'; parameters.Password ;             null )}}",
                    "Password_Check": "{{   if(temp.Method == 'POST'; parameters.Password_Check ;       null )}}",
                    "CurrentUserName": "{{  if(temp.Method == 'POST'; parameters.CurrentUserName ;      null )}}",
                    "CurrentUserIPs": "{{   if(temp.Method == 'POST'; parameters.CurrentUserIPs ;       null )}}",
                    "Contact": {
                        "Fax": "{{          if(temp.Method == 'POST'; parameters.Contact.Fax ;          if(ifempty(parameters.Contact.Fax, '') == ''       ; temp.Customer.Contact.Fax; parameters.Contact.Fax ) )}}",
                        "Phone": "{{        if(temp.Method == 'POST'; parameters.Contact.Phone ;        if(ifempty(parameters.Contact.Phone, '') == ''     ; temp.Customer.Contact.Phone; parameters.Contact.Phone ) )}}",
                        "Phone2": "{{       if(temp.Method == 'POST'; parameters.Contact.Phone2 ;       if(ifempty(parameters.Contact.Phone2, '') == ''    ; temp.Customer.Contact.Phone2 ; parameters.Contact.Phone2 ) )}}",
                        "CellPhone": "{{    if(temp.Method == 'POST'; parameters.Contact.CellPhone ;    if(ifempty(parameters.Contact.CellPhone, '') == '' ; temp.Customer.Contact.CellPhone; parameters.Contact.CellPhone ) )}}"
                    },
                    // TODO: CustomerGroupIDs if not an array of numbers, get the values of CustomerGroupID
                    "CustomerGroupIDs": "{{     parameters.CustomerGroupIDs }}",
                    "Addresses": "{{            parameters.Addresses }}",
                    "ExtendedProperties": "{{   parameters.ExtendedProperties }}"
                }
            }
        }
    },
    {
        // Person
        "condition": "{{(temp.CustomerTypeID == 80)}}",
        "response": {
            "temp": {
                "Body": {
                    // Person
                    "Surname": "{{   if(temp.Method == 'POST'; parameters.Surname ;                                             if(ifempty(parameters.Surname, '') == ''   ; temp.Customer.Surname; parameters.Surname ) )}}",
                    "Cpf": "{{       if(temp.Method == 'POST'; parameters.Cpf ;                                                 if(ifempty(parameters.Cpf, '') == ''       ; temp.Customer.Cpf; parameters.Cpf ) )}}",
                    "RG": "{{        if(temp.Method == 'POST'; parameters.RG ;                                                  if(ifempty(parameters.RG, '') == ''        ; temp.Customer.RG; parameters.RG ) )}}",
                    "Gender": "{{    if(temp.Method == 'POST'; parameters.Gender ;                                              if(ifempty(parameters.Gender, '') == ''    ; temp.Customer.Gender; parameters.Gender ) )}}",
                    "BirthDate": "{{ if(temp.Method == 'POST'; ('/Date(' + formatDate(parameters.BirthDate, 'X') + '000)/' ) ;  if(ifempty(parameters.BirthDate, '') == '' ; temp.Customer.BirthDate; ('/Date(' + formatDate(parameters.BirthDate, 'X') + '000)/' ) ) )}}"
                }
            }
        }
    },
    {
        // Company
        "condition": "{{(temp.CustomerTypeID == 67)}}",
        "response": {
            "temp": {
                "Body": {
                    "TradingName": "{{ if(temp.Method == 'POST'; parameters.TradingName ; if(ifempty(parameters.TradingName, '') == '' ; temp.Customer.TradingName; parameters.TradingName ) )}}",
                    "Cnpj": "{{        if(temp.Method == 'POST'; parameters.Cnpj ;        if(ifempty(parameters.Cnpj, '') == ''        ; temp.Customer.Cnpj; parameters.Cnpj ) )}}"
                }
            }
        }
    },
    {
        "url": "/v1/Profile/API.svc/web/{{if( temp.CustomerType == 'P'; 'SavePerson'; 'SaveCompany' )}}",
        "body": "{{temp.Body}}",
        "response": {
            "output": "{{body}}",
            "valid": {
                "condition": "{{body.IsValid}}",
                "type": "DataError",
                "message": "{{ ifempty(body.Errors[].Key + ': ', '') + body.Errors[].ErrorMessage }}"
            }
        }
    }
]