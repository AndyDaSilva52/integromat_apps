[
    {
        "response": {
            "temp": {
                "arrayMovFinanc": [
                    "<MOV_RE_VALOR>{{       utf8Decode(parameters.MOV_RE_VALOR) }}</MOV_RE_VALOR>",
                    "<FIL_IN_CODIGO>{{      utf8Decode(parameters.FIL_IN_CODIGO)}}</FIL_IN_CODIGO>",
                    "<ACAO_IN_CODIGO>{{     utf8Decode(parameters.ACAO_IN_CODIGO)}}</ACAO_IN_CODIGO>",
                    "<TPD_ST_CODIGO>{{      utf8Decode(parameters.TPD_ST_CODIGO)}}</TPD_ST_CODIGO>",
                    "<AGN_ST_TIPOCODIGO>{{  utf8Decode(parameters.AGN_ST_TIPOCODIGO)}}</AGN_ST_TIPOCODIGO>",
                    "<AGN_ST_CODIGO>{{      utf8Decode(parameters.AGN_ST_CODIGO)}}</AGN_ST_CODIGO>",
                    "<AGN_TAU_ST_CODIGO>{{  utf8Decode(parameters.AGN_TAU_ST_CODIGO)}}</AGN_TAU_ST_CODIGO>",
                    "<MVF_ST_NOMINAL>{{     utf8Decode(parameters.MVF_ST_NOMINAL)}}</MVF_ST_NOMINAL>",
                    "<MVF_ST_DOCINTERNO>{{  utf8Decode(parameters.MVF_ST_DOCINTERNO)}}</MVF_ST_DOCINTERNO>",
                    "<MOV_ST_DOCUMENTO>{{   utf8Decode(parameters.MOV_ST_DOCUMENTO)}}</MOV_ST_DOCUMENTO>",
                    "<MOV_DT_DATADOCTO>{{   utf8Decode(formatDate(parameters.MOV_DT_DATADOCTO; 'DD/MM/YYYY'))}}</MOV_DT_DATADOCTO>",
                    "<MOV_DT_VENCTO>{{      utf8Decode(formatDate(parameters.MOV_DT_VENCTO; 'DD/MM/YYYY'))}}</MOV_DT_VENCTO>",
                    "<IND_IN_CODIGOMOE>{{   utf8Decode(parameters.IND_IN_CODIGOMOE)}}</IND_IN_CODIGOMOE>",
                    "<MOV_ST_COMPLHIST>{{   utf8Decode(parameters.MOV_ST_COMPLHIST)}}</MOV_ST_COMPLHIST>",
                    "<USU_IN_INCLUSAO>{{    utf8Decode(parameters.USU_IN_INCLUSAO)}}</USU_IN_INCLUSAO>"
                ]
            }
        }
    },
    {
        "response": {
            "temp": {
                "MovVinculadoJSON": {
                    "MovVinculado": "{{parameters.MovVinculado}}"
                }
            }
        }
    },
    {
        "response": {
            "temp": {
                "xmlMovVinculado": [
                    //"<MovVinculado OPERACAO=\"{{parameters.MovVinculado[]._OPERACAO}}\">{{join(temp.arrayMovVinculado; '\n')}}</MovVinculado>"
                    "{{ convertJson2xml(temp.MovVinculadoJSON, { compact: true }) }}"
                ]
            }
        }
    },
    {
        "response": {
            "temp": {
                "xmlMovFinanc": [
                    "<MovFinanc OPERACAO=\"{{parameters.MovFinanc_OPERACAO}}\">{{join(temp.arrayMovFinanc;'\n')}} {{'\n'}} {{ temp.xmlMovVinculado }}</MovFinanc>"
                ]
            }
        }
    },
    {
        "response": {
            "temp": {
                "arrayBody": [
                    "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>",
                    "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">",
                    "<soapenv:Body>",
                    "<tem:MegaIntegradorService___IntegraXML>",
                    "<tem:pPRO_IN_ID>{{     parameters.pPRO_IN_ID }}</tem:pPRO_IN_ID>",
                    "<tem:pUSU_IN_CODIGO>{{ parameters.pUSU_IN_CODIGO }}</tem:pUSU_IN_CODIGO>",
                    "<tem:pObs>{{           parameters.pObs}}</tem:pObs>",
                    "<tem:pEnviaRecebe>{{   parameters.pEnviaRecebe}}</tem:pEnviaRecebe>",
                    "<tem:pTransacao>{{     parameters.pTransacao}}</tem:pTransacao>",
                    "<tem:pSistema>{{       parameters.pSistema}}</tem:pSistema>",
                    "<tem:pXMLHeader/>",
                    "<tem:pXML><![CDATA[{{  temp.xmlMovFinanc}}]]></tem:pXML>",
                    "</tem:MegaIntegradorService___IntegraXML>",
                    "</soapenv:Body></soapenv:Envelope>"
                ]
            }
        }
    },
    {
        "url": "/Integrador",
        "body": "{{''join(temp.arrayBody, '\n')}}",
        "response": {
            "type": {
                "*": "xml"
                //"400-408": "text", // parse all 400-408 responses as text, overrides "*",
                //"406": "xml" // parse the 406 response as XML, overrides above definitions
            },
            "output": {
                "Erro": "{{body.`SOAP-ENV:Envelope`.`SOAP-ENV:Body`[].`v1:MegaIntegradorService___IntegraXMLResponse`[].`v1:Result`[].`v1:Erro`[]}}",
                "Mensagem": "{{body.`SOAP-ENV:Envelope`.`SOAP-ENV:Body`[].`v1:MegaIntegradorService___IntegraXMLResponse`[].`v1:Result`[].`v1:Mensagem`[]}}",
                "CodTransacao": "{{body.`SOAP-ENV:Envelope`.`SOAP-ENV:Body`[].`v1:MegaIntegradorService___IntegraXMLResponse`[].`v1:Result`[].`v1:CodTransacao`[]}}",
                "PKMega": "{{body.`SOAP-ENV:Envelope`.`SOAP-ENV:Body`[].`v1:MegaIntegradorService___IntegraXMLResponse`[].`v1:Result`[].`v1:PKMega`[]}}"
                /** 
                TODO: PKMegaArray ou PKMegaCollection ou PKMegaSplit
                    Array ou Collection de Chave e Valor
                    Ex:
                    PKMega = 1;474
                    PKMegaArray = {
                        "AGN_PAD_IN_CODIGO": 1
                        "AGN_IN_CODIGO": 474
                    }
                */
            }
        }
    }
]